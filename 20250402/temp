Option Explicit

Private clsReportName As String            ' Report Title
Private clsFieldValues As Object           ' Dictionary：key = Field Name，value = Field Value
Private clsFieldAddresses As Object        ' Dictionary：key = Field Name，value = Excel Field Address

'=== Initialize (Set Initial Fields, Field Values, Field Addresses for Each Report Title) ===
Public Sub Init(ByVal reportName As String)
    clsReportName = reportName
    Set clsFieldValues = CreateObject("Scripting.Dictionary")
    Set clsFieldAddresses = CreateObject("Scripting.Dictionary")
    
    ' 根據報表名稱，加入各個欄位、設定儲存格位置，初始值皆為 Null
    Select Case reportName
        Case "CNY1"
            AddField "其他金融資產_淨額", "B2", Null
            AddField "其他", "C2", Null
            AddField "CNY1_資產總計", "D2", Null
            AddField "其他金融負債", "E2", Null
            AddField "其他什項金融負債", "F2", Null
            AddField "CNY1_負債總計", "G2", Null
        Case "FB2"
            AddField "短期負債", "B3", Null
            AddField "長期負債", "C3", Null
        Case "FB3"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "FB3A"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "FM5"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "FM11"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "FM13"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "AI821"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "Table2"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "FB5_FB5A"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "FM2"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "FM10"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "F1_F2"
            AddField "資產總計", "B4", Null
            AddField "負債總計", "C4", Null
        Case "Table41"
            AddField "總收入", "B5", Null
            AddField "總支出", "C5", Null
        Case "AI602"
            AddField "總收入", "B5", Null
            AddField "總支出", "C5", Null
        Case "AI240"
            AddField "總收入", "B5", Null
            AddField "總支出", "C5", Null        
        ' 如有其他報表，請加入對應設定
    End Select
End Sub

'=== Private method：Add fields for Field Title ===
Private Sub AddField(ByVal fieldName As String,
                     ByVal cellAddress As String,
                     ByVal initValue As Variant)
    clsFieldAddresses.Add fieldName, cellAddress
    clsFieldValues.Add fieldName, initValue
End Sub

'=== Set Field Value ===
Public Sub SetField(ByVal fieldName As String,
                    ByVal value As Variant)
    If clsFieldValues.Exists(fieldName) Then
        clsFieldValues(fieldName) = value
    Else
        Err.Raise 1001, , "欄位名稱 [" & fieldName & "] 不存在於報表 " & clsReportName
    End If
End Sub

'=== Get All Field Values Dic (return Dictionary) ===
Public Function GetAllFieldValues() As Object
    Set GetAllFieldValues = clsFieldValues
End Function

'=== Get All Field Addresses Dic (return Dictionary) ===
Public Function GetAllFieldPositions() As Object
    Set GetAllFieldPositions = clsFieldAddresses
End Function

'=== Validate All Field fill Values (Null means not filled) ===
Public Function ValidateFields() As Boolean
    Dim key As Variant, msg As String
    msg = ""
    For Each key In clsFieldValues.Keys
        If IsNull(clsFieldValues(key)) Then
            msg = msg & key & vbCrLf
        End If
    Next key
    
    If msg <> "" Then
        MsgBox "報表 [" & clsReportName & "] 以下欄位未填入有效資料:" & vbCrLf & msg, vbExclamation
        ValidateFields = False
    Else
        ValidateFields = True
    End If
End Function

'=== Fill Field Values Dynamically for Each Excel Worksheet ===
Public Sub ApplyToWorksheet(ByVal ws As Worksheet)
    Dim key As Variant
    For Each key In clsFieldValues.Keys
        If Not IsNull(clsFieldValues(key)) Then
            ws.Range(clsFieldAddresses(key)).Value = clsFieldValues(key)
        End If
    Next key
End Sub

'=== Get c ===
Public Property Get ReportName() As String
    ReportName = clsReportName
End Property





'========================================


Public Sub UpdateRecord(ByVal DBPath As String, _
                        ByVal dataMonthString As String, _
                        ByVal reportName As String, _
                        ByVal worksheetName_fieldKey As String, _
                        ByVal fieldAddress As String, _
                        ByVal fieldValue As Double)
    Dim conn As Object, cmd As Object
    Dim sql As String
    
    Set conn = CreateObject("ADODB.Connection")
    conn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & DBPath
    
    sql = "UPDATE MonthlyDeclarationReport SET FieldValue = " & fieldValue & ", CaseUpdatedAt = Now() " & _
          "WHERE DataMonthString = '" & dataMonthString & "' " & _
          "AND ReportName = '" & reportName & "' " & _
          "AND WorksheetName_FieldKey = '" & worksheetName_fieldKey & "' " & _
          "AND FieldAddress = '" & fieldAddress & "';"
    
    Set cmd = CreateObject("ADODB.Command")
    cmd.ActiveConnection = conn
    cmd.CommandText = sql
    cmd.Execute
    
    conn.Close
    Set conn = Nothing
    Set cmd = Nothing
End Sub



Public Sub ProcessCNY1()
    Dim rpt As clsReport
    Dim dataArr As Variant, tempValue As Double
    Set rpt = gReports("CNY1")
    ' 取得 Query 資料 (查詢名稱 "CNY1_Query")
    dataArr = GetAccessDataAsArray(gDBPath, "CNY1_Query", gDataMonthString)
    If UBound(dataArr) < 1 Then
        MsgBox "CNY1 查詢資料不完整！", vbExclamation
        Exit Sub
    End If
    ' 假設 dataArr(1,0) 為工作表 X 的 "其他金融資產_淨額"、"其他"、"CNY1_資產總計" 的共同值：
    tempValue = CDbl(dataArr(1, 0))
    rpt.SetField "X", "其他金融資產_淨額", tempValue
    rpt.SetField "X", "其他", tempValue
    rpt.SetField "X", "CNY1_資產總計", tempValue
    ' 假設 dataArr(1,1) 為工作表 Y 的 "其他金融負債" 與 "其他什項金融負債" 的值：
    tempValue = CDbl(dataArr(1, 1))
    rpt.SetField "Y", "其他金融負債", tempValue
    rpt.SetField "Y", "其他什項金融負債", tempValue
    ' 假設 dataArr(1,2) 為工作表 Z 的 "CNY1_負債總計" 的值：
    tempValue = CDbl(dataArr(1, 2))
    rpt.SetField "Z", "CNY1_負債總計", tempValue
    ' 驗證並更新資料庫（以 Insert 示範，若記錄已存在則應用 UPDATE）
    If rpt.ValidateFields() Then
        Dim key As Variant, allValues As Object
        Set allValues = rpt.GetAllFieldValues()  ' key 格式 "wsName|fieldName"
        For Each key In allValues.Keys
            UpdateRecord gDBPath, gDataMonthString, rpt.ReportName, key, _
                CDbl(allValues(key))
        Next key
    End If
End Sub

在ProcessCNY1中，我必須要使用上面的UpdateRecord，其中updateRecord必須要在，
"WHERE DataMonthString = '" & dataMonthString & "' " & _
"AND ReportName = '" & reportName & "' " & _
"AND WorksheetName_FieldKey = '" & worksheetName_fieldKey & "' " & _
"AND FieldAddress = '" & fieldAddress & "';"
等於我在clsReport中儲存的特定工作表裡面特定欄位中填入數值，
但是我在ProcessCNY1中這邊我不知道要如何取得FieldAddress資料，請幫我修改





' =============================================================



Public Sub ProcessCNY1()
    Dim rpt As clsReport
    Dim dataArr As Variant, tempValue As Double
    Set rpt = gReports("CNY1")
    
    ' 取得 Query 資料 (查詢名稱 "CNY1_Query")
    dataArr = GetAccessDataAsArray(gDBPath, "CNY1_Query", gDataMonthString)
    If UBound(dataArr) < 1 Then
        MsgBox "CNY1 查詢資料不完整！", vbExclamation
        Exit Sub
    End If
    
    ' 假設 dataArr(1,0) 為工作表 X 的 "其他金融資產_淨額"、"其他"、"CNY1_資產總計" 的共同值：
    tempValue = CDbl(dataArr(1, 0))
    rpt.SetField "X", "其他金融資產_淨額", tempValue
    rpt.SetField "X", "其他", tempValue
    rpt.SetField "X", "CNY1_資產總計", tempValue
    
    ' 假設 dataArr(1,1) 為工作表 Y 的 "其他金融負債" 與 "其他什項金融負債" 的值：
    tempValue = CDbl(dataArr(1, 1))
    rpt.SetField "Y", "其他金融負債", tempValue
    rpt.SetField "Y", "其他什項金融負債", tempValue
    
    ' 假設 dataArr(1,2) 為工作表 Z 的 "CNY1_負債總計" 的值：
    tempValue = CDbl(dataArr(1, 2))
    rpt.SetField "Z", "CNY1_負債總計", tempValue
    
    ' 驗證報表是否所有欄位皆填值
    If rpt.ValidateFields() Then
        Dim key As Variant
        Dim allValues As Object, allPositions As Object
        
        ' 取得所有欄位數值與對應儲存格地址 (key 格式 "wsName|fieldName")
        Set allValues = rpt.GetAllFieldValues()
        Set allPositions = rpt.GetAllFieldPositions()
        
        ' 逐一更新資料庫，使用 UpdateRecord，此函式要求傳入：
        '   - WorksheetName_FieldKey：此處就是 key (例如 "X|其他金融資產_淨額")
        '   - FieldAddress：從 allPositions(key) 取得
        For Each key In allValues.Keys
            UpdateRecord gDBPath, gDataMonthString, rpt.ReportName, key, allPositions(key), CDbl(allValues(key))
        Next key
    End If
End Sub




SELECT 
    OBU_MM4901B.DataID,
    OBU_MM4901B.DataMonthString, 
    OBU_MM4901B.DealDate, 
    OBU_MM4901B.DealID, 
    OBU_MM4901B.CounterParty, 
    OBU_MM4901B.MaturityDate, 
    OBU_MM4901B.CurrencyType, 
    OBU_MM4901B.Amount,
    IIF(RIGHT(OBU_MM4901B.CounterParty, 3) <> "OBU" AND MID(OBU_MM4901B.DealID, 5, 2) = "MP", "TWTP_MP",
        IIF(RIGHT(OBU_MM4901B.CounterParty, 3) <> "OBU" AND MID(OBU_MM4901B.DealID, 5, 2) = "MT", "TWTP_MT",
            IIF(RIGHT(OBU_MM4901B.CounterParty, 3) = "OBU" AND MID(OBU_MM4901B.DealID, 5, 2) = "MP", "OBU_MP",
                "OBU_MT"
            )
        )
    ) AS Category,
    bk.BankCode
FROM
    OBU_MM4901B
LEFT JOIN BankDirectory As bk
    ON OBU_MM4901B.CounterParty = bk.SWIFT
WHERE 
    OBU_MM4901B.CurrencyType = "CNY" 
    AND OBU_MM4901B.DataMonthString = "2024/11";


SELECT 
    om.CounterParty, 
    SUM(IIf(om.CurrencyType = 'USD', 
            om.Amount, 
            om.Amount / e.Rate)) AS total_amount_USD,
    bk.BankCode
FROM 
    (OBU_MM4901B AS om
    LEFT JOIN CloseRate AS e 
	    ON om.CurrencyType = e.QuoteCurrency)
    LEFT JOIN BankDirectory AS bk
	    ON om.CounterParty = bk.SWIFT
WHERE 
    om.DataMonthString = '2024/11' 
    AND 
    (
        e.BaseCurrency <> 'TWD' 
        OR (e.BaseCurrency = 'TWD' AND e.QuoteCurrency = 'USD')
    )
GROUP BY 
    om.CounterParty, bk.BankCode;








    Dim currencies As Variant, transactions As Variant, startRows As Variant, colLetters As Variant
    Dim i As Integer, j As Integer
    currencies = Array("日圓", "英鎊", "瑞士法郎", "加拿大幣", "澳幣", "紐西蘭幣", "新加坡幣", "港幣", "南非幣", "瑞典幣", "泰幣", "馬來幣", "歐元", "人民幣")
    transactions = Array("與國內顧客間交易_即期", "與國內金融機構間交易_即期", "與國內金融機構間交易_換匯", "與國外金融機構及非金融機構間交易_即期", "與國外金融機構及非金融機構間交易_換匯")
    startRows = Array(5, 5, 5, 5, 5) ' 每組交易的起始儲存格列數
    colLetters = Array("B", "C", "D", "H", "J") ' 每組交易對應的欄位

    Dim fieldList() As Variant
    Dim index As Integer
    index = 0
    ReDim fieldList(UBound(transactions) * UBound(currencies))

    For i = LBound(transactions) To UBound(transactions)
        For j = LBound(currencies) To UBound(currencies)
            fieldList(index) = Array(transactions(i) & "_" & currencies(j), colLetters(i) & (startRows(i) + j), Null)
            index = index + 1
        Next j
    Next i

    ' Add to Worksheet Fields
    AddWorksheetFields "Sheet1", fieldList


    請先理解上面那段程式碼再幹嘛，再跟我說在做什麼，以及有沒有錯誤的地方




我現在有一個需求是這樣
DataID	DataMonthString	DealDate	DealID	CounterParty	MaturityDate	CurrencyType	Amount	Category	BankCode
6	2022/11	2022/12/30	OB24MP00355	ICBCTWTP011	2025/1/7	CNY	$93,000,000.00	TWTP_MP	17

我要針對上面的excel中的表格資料，資料由A欄至J欄，
逐一遍歷每一筆資料，
Category 是 TWTP_MP則紀錄填入E欄位
Category 是 OBU_MP則紀錄填入F欄位
Category 是 TWTP_MT則紀錄填入G欄位
Category 是 OBU_MT則紀錄填入H欄位
至於row則隨著迴圈每增加一筆資料逐步加1，由10開始算，
每跑一筆資料




SELECT 
    OBU_MM4901B.DataID,
    OBU_MM4901B.DataMonthString, 
    OBU_MM4901B.DealDate, 
    OBU_MM4901B.DealID, 
    OBU_MM4901B.CounterParty, 
    OBU_MM4901B.MaturityDate, 
    OBU_MM4901B.CurrencyType, 
    OBU_MM4901B.Amount,
    IIF(RIGHT(OBU_MM4901B.CounterParty, 3) <> "OBU" AND MID(OBU_MM4901B.DealID, 5, 2) = "MP", "TWTP_MP",
        IIF(RIGHT(OBU_MM4901B.CounterParty, 3) <> "OBU" AND MID(OBU_MM4901B.DealID, 5, 2) = "MT", "TWTP_MT",
            IIF(RIGHT(OBU_MM4901B.CounterParty, 3) = "OBU" AND MID(OBU_MM4901B.DealID, 5, 2) = "MP", "OBU_MP",
                "OBU_MT"
            )
        )
    ) AS Category,
    bk.BankCode
FROM
    OBU_MM4901B
LEFT JOIN BankDirectory As bk
    ON OBU_MM4901B.CounterParty = bk.SWIFT
WHERE 
    OBU_MM4901B.CurrencyType = "CNY" 
    AND OBU_MM4901B.DataMonthString = "2024/11";





SELECT
    bt.BankTypeName,
    bd.BankTypeCode,
    SUM(o.Amount) AS TotalAmount
FROM
    (OBU_MM4901B AS o
        INNER JOIN BankDirectory AS bd
        ON o.CounterParty = bd.SWIFT)
        INNER JOIN BankType AS bt
        ON bd.BankTypeCode = bt.BankTypeCode
WHERE o.CurrencyType = "CNY"
  AND o.DataMonthString = "2024/11"
GROUP BY bd.BankTypeCode, bt.BankTypeName;





以下提供一個完整的解題思路與範例程式碼，說明如何：
	1.	根據問題1的結果（各工作表根據固定順序累計後的數值集合），依照固定順序（“JPY”, “GBP”, …, “OTHER”）儲存各幣別的數值。
	2.	在問題2中，利用交易種類（例如 “F1_與國內顧客間交易_即期” 等）與固定順序的幣別組合，依序產生欄位名稱，例如
	•	F1_與國內顧客間交易_即期_JPY
	•	F1_與國內顧客間交易_即期_GBP
	•	…
並將問題1中累計好的對應數值直接寫入到 xlsht.Range(fieldName).Value 以及呼叫 rpt.SetField (第一個參數固定 “F1”)。

⸻

解題步驟

(1) 問題1：建立固定順序的 Collection

假設你已針對某個資料來源（例如「F1_與國內顧客間交易_即期」的資料表）依照固定順序累計完每個幣別的值，並將結果存入一個 Collection。
例如，固定順序為：

fixedCurrencies = Array("JPY", "GBP", "CHF", "CAD", "AUD", "NZD", "SGD", "HKD", "ZAR", "SEK", "THB", "RM", "EUR", "CNY", "OTHER")

你可以利用 Dictionary 先初始化所有幣別為 0，再依照該工作表的資料累加，最後依照固定順序存入 Collection。這邊假設你已取得該 Collection（此處以變數 coll 示意），且 Collection 中的項目順序正好與 fixedCurrencies 陣列一致（注意 Collection 是 1-indexed）。

(2) 問題2：產生70對程式碼（實際上是依據每個交易種類與每個幣別產生動作）

你可能有多種交易種類，例如：

transactions = Array("F1_與國內顧客間交易_即期", _
                     "F1_與國內金融機構間交易_即期", _
                     "F1_與國內金融機構間交易_換匯", _
                     "F1_與國外金融機構及非金融機構間交易_即期", _
                     "F1_與國外金融機構及非金融機構間交易_換匯")

若每種交易都有15個幣別，則總共 5 × 15 = 75 對程式碼（或根據你實際需要的 70 對來調整交易種類或幣別範圍）。
利用巢狀迴圈遍歷交易種類與固定順序幣別，依序組合出 fieldName，再直接將問題1中相對應的數值填入工作表及報表欄位。
注意：如果不同的交易種類來自不同來源的 Collection，你可以分別設定不同的 Collection，這裡示範以相同的 coll 為例。

⸻

範例程式碼

下面提供一個完整的範例，假設已經有一個 Collection 變數 coll（內容依照固定順序排列，每個項目代表對應幣別累計後的值），以及全域變數 xlsht（對應到正確的 Worksheet）與 rpt（報表物件，其 SetField 方法固定第一個參數為 “F1”）。

Sub SetTransactionFields()
    ' 固定順序的幣別陣列
    Dim fixedCurrencies As Variant
    fixedCurrencies = Array("JPY", "GBP", "CHF", "CAD", "AUD", _
                              "NZD", "SGD", "HKD", "ZAR", "SEK", _
                              "THB", "RM", "EUR", "CNY", "OTHER")
    
    ' 交易種類陣列
    Dim transactions As Variant
    transactions = Array("F1_與國內顧客間交易_即期", _
                         "F1_與國內金融機構間交易_即期", _
                         "F1_與國內金融機構間交易_換匯", _
                         "F1_與國外金融機構及非金融機構間交易_即期", _
                         "F1_與國外金融機構及非金融機構間交易_換匯")
    
    ' 假設 coll 是依照固定順序存放數值的 Collection，
    ' 如下為示範用的範例，實際上你應該依據問題1的邏輯產生：
    Dim coll As Collection
    Set coll = New Collection
    Dim i As Integer    
    ' 假設每個幣別值已計算好，這裡以數字示範，實際請換成你的數值
    For i = LBound(fixedCurrencies) To UBound(fixedCurrencies)
        ' 例如：若該幣別無資料，值為 0；有資料則填入累計後的金額
        coll.Add i + 1  ' 注意：這裡僅為範例數值
    Next i
    
    ' 遍歷每個交易種類及固定順序的幣別，產生並設定對應的欄位
    Dim t As Integer, c As Integer
    Dim fieldName As String
    Dim curValue As Variant
    
    For t = LBound(transactions) To UBound(transactions)
        For c = LBound(fixedCurrencies) To UBound(fixedCurrencies)
            ' 組合欄位名稱，順序固定如：F1_與國內顧客間交易_即期_JPY, F1_與國內顧客間交易_即期_GBP, ...
            fieldName = transactions(t) & "_" & fixedCurrencies(c)
            
            ' 依照固定順序，從 coll 取出對應的值
            ' Collection 是 1-indexed，所以使用 c + 1
            curValue = coll(c + 1)
            
            ' 將數值寫入 Excel 指定的 Range
            xlsht.Range(fieldName).Value = curValue
            
            ' 使用 rpt.SetField 更新報表欄位，第一個參數固定為 "F1"
            rpt.SetField "F1", fieldName, curValue
        Next c
    Next t
End Sub



⸻

說明
	1.	Collection 建立
	•	根據問題1，你需先遍歷各工作表資料（例如 Foreign_FS、Foreign_SS、Domestic_FS、Domestic_SS），依固定順序累加「Cur」欄位對應的金額，並存入各自的 Collection。
	•	範例中以 coll 作為示意，實際作業中可依不同交易種類使用不同 Collection，例如 collDomesticFS、collForeignFS 等，然後在迴圈中依交易種類選擇對應的 Collection。
	2.	產生欄位名稱
	•	以交易種類字串與固定幣別字串組合成完整欄位名稱，如 “F1_與國內顧客間交易_即期_JPY”。
	3.	數值寫入
	•	利用 xlsht.Range(fieldName).Value 將數值填入對應的 Excel 儲存格，並以 rpt.SetField 更新報表欄位。
	•	這裡不做額外運算，只是根據問題1所得的數值直接寫入，確保問題1與問題2的順序一致。

如此一來，你只需要維護問題1中 Collection 的產生邏輯，然後利用上面這個巢狀迴圈自動產生並更新所有 70（或更多）對的欄位程式碼，達到自動化且避免重複撰寫。
